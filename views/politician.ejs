<!DOCTYPE html>
<html lang="en">

  <head>
      <title>PolsTrack</title>
      <link rel="shortcut icon" href="#"/>
      <link rel="stylesheet" type="text/css" href="./css/common.css">
      <script src="https://code.jquery.com/jquery-1.10.1.min.js"></script>
      <script src="https://kit.fontawesome.com/5497cadb8e.js" crossorigin="anonymous"></script>
  </head>

  <body>

    <header>
      <div class="logo">
        <a href="./">PolsTrack</a>
      </div>
      <nav>
        <div class="item current">
          <a href="./politician">新聞</a>
        </div>
        <div class="item">
          <a href="./compare">比較</a>
        </div>
        <div class="item">
          <a href="./hots">熱門</a>
        </div>
      </nav>
      <div class="feature">
        <a href="./politician">關於</a>
      </div>
    </header>



    <main>

      <div class="sidenav">
        <div class="filters">
          <ul>
            <li class="filter" id="main">篩選</li>
            <li class="filter" id="party">政黨</li>
            <!-- <li class="filter" id="region">地區</li> -->
            <!-- <li class="filter" id="time">時間</li> -->
          </ul>
        </div>
        <div class="partyList filterItems scrollBar">
          <ul>
            <% for(let i = 1; i < partiesData.length; i++) { %>
              <li class="party"><%= partiesData[i].party %></li>
            <% } %>
            <!-- <li class="party">中國國民黨</li> -->
          </ul>
        </div>
        <div class="mainFilter filterItems">
          <div class="politician">
            <ul id="appendPols">
              <li class="personTitle">人物</li>
              <div class="box-border"></div>
              <div class="inner scrollBar">
                <% polsData.forEach(function(result){ %>
                  <li class="person"><%= result.name %></li>
                <% }); %>
                <!-- <li class="person">韓國瑜</li> -->
              </div>
            </ul>
          </div>
          <div class="issueList">
            <ul>
              <li class="issueTitle">議題</li>
              <div class="box-border"></div>
              <div class="inner scrollBar">
                <% issuesData.forEach(function(result){ %>
                  <li class="issue"><%= result.name %></li>
                <% }); %>
                <!-- <li class="issue">一個中國</li> -->
              </div>
            </ul>
          </div>
        </div>

      </div>

      <div class="content">

        <div class="top" id="defaultTop">
          <div class="top_core">
            <%_ if(title.length === 0 && issue.length === 0) { _%> <!-- oncoming -->
              <%_ title = "總覽"; _%>
              <%_ issue = ""; _%>
            <%_ } else if(title.length === 0 || issue.length === 0) { _%> <!-- index -->
              <%_ title = title.length === 0 ? issue : title; _%>
              <%_ issue = "" _%>
            <%_ } else { _%> <!-- hots -->
              <%_ title = title _%>
              <%_ issue = issue _%>
            <%_ } _%>
            <div class="titleName" id="titleName"><%- title %></div>
            <div class="switchBox">
              <div class="onoffswitch">
                  <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch">
                  <label class="onoffswitch-label switch" for="myonoffswitch">
                      <span class="onoffswitch-inner"></span>
                      <span class="onoffswitch-switch"></span>
                  </label>
              </div>
              <div class="switchTitle">精準</div>
              <i class="fa fa-question-circle tooltip">
                <span class="tooltiptext">精準模式：<br>提高「新聞」與「人物」的相關性，更著重在「人物」所表達的意見。</span>
              </i>
            </div>
          </div>
          <div class="titleIssue" id="titleIssue"><%- issue %></div>

        </div>
        <div class="newslist" id="oncomingNewsP">
          <div class="oncNoContent">無符合條件之新聞內容</div>
          <ul class="ulNews scrollBar" id="oncomingNews" onscroll="paging('<%= from %>')">
            <%_ for(let i = 0; i < results.news.length; i++) { _%><li><div class="timeline">
              <%_ var renderTime = new Date(results.news[i].pubTime); _%>
              <%_ if(i > 0) { _%>
                <%_ var renderPreTime = new Date(results.news[i - 1].pubTime); _%>
                <%_ var renderPreTimeY = renderPreTime.getFullYear(); _%>
                <%_ var renderPreTimeM = renderPreTime.getMonth(); _%>
                <%_ var renderCurTimeY = renderTime.getFullYear(); _%>
                <%_ var renderCurTimeM = renderTime.getMonth(); _%>
                <%_ if(renderPreTimeY !== renderCurTimeY && renderPreTimeM !== renderCurTimeM) { _%>
                  <p class="year"><%= renderTime.getFullYear() %></p>
                  <p class="month"><%= (renderTime.getMonth() < 10 ? '0' : '') + (renderTime.getMonth() + 1) %></p>
                <%_ } else if (renderPreTimeY == renderCurTimeY && renderPreTimeM !== renderCurTimeM) { _%>
                  <p class="year"><%= "" %></p>
                  <p class="month"><%= (renderTime.getMonth() < 10 ? '0' : '') + (renderTime.getMonth() + 1) %></p>
                <%_ } else { _%>
                  <p class="year"><%= "" %></p>
                  <p class="month"><%= "" %></p>
                <%_ } _%>
              <%_ } else { _%>
                <p class="year"><%= renderTime.getFullYear() %></p>
                <p class="month"><%= (renderTime.getMonth() < 10 ? '0' : '') + (renderTime.getMonth() + 1) %></p>
              <%_ } _%>
              </div><div class="news" onclick="readMore()"><div class="news-content"><div class="title"><%= results.news[i].title %></div><div class="publisher"><%= results.news[i].publisher %></div><div class="pubTime"><%= results.news[i].pubTime %></div><div class="desc"><p><%= results.news[i].content %></p></div><div class="mainContent hidden">
                    <%_ let appendModContent = results.news[i].content.replace(/(\u3002\u300d)/g, '。」<br><br>').replace(/(\u3002)(?!\u300d)/g, '。<br><br>') _%>
                    <p><%- appendModContent %></p>
                  </div><a class="url hidden" href="<%= results.news[i].href %>" target="_blank"><%= results.news[i].href %></a></div></div><div class="renderTags">
                <%_ let rndPolTagC = 0; _%>
                <%_ let rndIsuTagC = 0; _%>
                <ul class="ulPol">
                <%_ for(let j = 0; j < results.news[i].tag.length && rndPolTagC < 8; j++) { _%>
                  <%_ if(title.indexOf(results.news[i].tag[j].tagName) == -1 && issue.indexOf(results.news[i].tag[j].tagName) == -1) { _%>
                    <%_ if(results.news[i].tag[j].tagType === "NRP") { _%>
                        <li class="polTag" onclick="tagCall('<%=results.news[i].tag[j].tagName%>', 'pol')"><%= results.news[i].tag[j].tagName %></li>
                    <%_ } _%>
                  <%_ } _%>
                <%_ } _%>
                </ul>
                <ul class="ulIsu">
                <%_ for(let j = 0; j < results.news[i].tag.length && rndIsuTagC < 8; j++) { _%>
                  <%_ if(title.indexOf(results.news[i].tag[j].tagName) == -1 && issue.indexOf(results.news[i].tag[j].tagName) == -1) { _%>
                    <%_ if(results.news[i].tag[j].tagType === "NI") { _%>
                      <li class="issueTag" onclick="tagCall('<%=results.news[i].tag[j].tagName%>', 'issue')"><%= results.news[i].tag[j].tagName %></li>
                    <%_ } _%>
                  <%_ } _%>
                <%_ } _%>
                </ul>
              </div></li><%_ }; _%></ul>
        </div>
        <div class="newslist" id="appendNewsP">
          <div class="appNoContent">無符合條件之新聞內容</div>
          <ul class="ulNews scrollBar" id="appendNews" onscroll="paging('append')">

          </ul>
        </div>
      </div> <!-- Content End -->

    </main>

    <footer>

    </footer>

  <script>
    const filters = document.querySelectorAll('.filter');
    const mainFilter = document.querySelector('.mainFilter');
    const partyFilter = document.querySelector('.partyList');
    const switchButton = document.querySelector('.switch');

    let people = document.querySelectorAll('.person');
    let issues = document.querySelectorAll('.issue');
    const parties = document.querySelectorAll('.party');

    const appendNews = document.getElementById("appendNews");
    const filPols = document.querySelector(".politician .inner");
    const filIssues = document.querySelector(".issueList .inner");

    const oncNoContent = document.querySelector(".appNoContent");
    const appNoContent = document.querySelector(".appNoContent");
    const personTitle = document.querySelector(".personTitle");
    const issueTitle = document.querySelector(".issueTitle");
    const boxBorder = document.querySelector(".box-border");

    // Pol, Issue record
    let param = {
      pol: [],
      issue: [],
      party: []
    }

    // 檢查是否來自 index/hots
    if(getQueryStringValue("pol")) {
      param.pol = [getQueryStringValue("pol")];
    }
    if(getQueryStringValue("issue")) {
      param.issue = [getQueryStringValue("issue")];
    }

    let strictMode = false;

    //------------ User click ------------

    // sidenav 選擇處理
    filters.forEach(filter => filter.addEventListener('click', function(event) {
      let chooseFilter = event.target.id;

      if(this.classList.contains("highlight")) { // 關掉 sidenav

        this.classList.remove("highlight");
        switch(chooseFilter) {
          case "main":
            mainFilter.style.display = "none";
            break;
          case "party":
            partyFilter.style.display = "none";
            break;
          default:
        }
        tagShow()
      } else { // 該點擊項目尚未被選擇
        this.classList.add("highlight");
        switch(chooseFilter) {
          case "main":
            mainFilter.style.display = "flex";
            break;
          case "party":
            partyFilter.style.display = "block";
            break;
          default:
        }
        tagShow()
      }
    }));

    // 人物選擇處理
    people.forEach(person => person.addEventListener('click', function(event) {
      param.pol = [];
      if(this.classList.contains("innerHighlight")) {
        this.classList.remove("innerHighlight");
        param.pol = [];
      } else {
        people.forEach(r => r.classList.remove("innerHighlight"));
        this.classList.add("innerHighlight");
      }

      people.forEach(function(person) {
        if(person.classList.contains("innerHighlight")) {
          param.pol.push(person.innerText);
        }
      });
      appSide.scrollTop = 0;

      polIssue(param);
      if(strictMode === false) {
        getNews(param);
      } else {
        getNewsLess(param);
      }
      filterHL(param);

      if(param.pol.length === 0) {
        personTitle.innerHTML = "人物";
        personTitle.style.color = "#FFFFFF"
      } else {
        personTitle.innerHTML = param.pol;
        personTitle.style.color = "#FFD479"
      }
      // personTitle.innerHTML = person.innerText;
    }));

    // 議題選擇處理
    issues.forEach(issue => issue.addEventListener('click', function(event) {
      param.issue = []; // 清空
      if(this.classList.contains("innerHighlight")) {
        this.classList.remove("innerHighlight");
      } else {
        issues.forEach(r => r.classList.remove("innerHighlight"));
        this.classList.add("innerHighlight");
      }

      issues.forEach(function(issue) {
        if(issue.classList.contains("innerHighlight")) {
          param.issue.push(issue.innerText);
        }
      });
      appSide.scrollTop = 0;

      if(strictMode === false) {
        getNews(param);
      } else {
        getNewsLess(param);
      }
      filterHL(param);

      if(param.issue.length === 0) {
        issueTitle.innerHTML = "議題";
        issueTitle.style.color = "#FFFFFF"
      } else {
        issueTitle.innerHTML = param.issue;
        issueTitle.style.color = "#FFD479"
      }
    }));

    // 政黨選擇處理
    parties.forEach(party => party.addEventListener('click', function(event) {
      param.party = [];
      if(this.classList.contains("innerHighlight")) {
        this.classList.remove("innerHighlight");
      } else {
        parties.forEach(r => r.classList.remove("innerHighlight"));
        this.classList.add("innerHighlight");
      }

      parties.forEach(function(party) {
        if(party.classList.contains("innerHighlight")) {
          param.party.push(party.innerText);
        }
      });
      partyPol(param);
      filterHL(param);
    }));

    // mode switch
    switchButton.addEventListener('click', function(event) {
      if(strictMode === false) {
        getNewsLess(param);
        strictMode = true;
        document.querySelector('.switchTitle').style.color = "#424242";
      } else {
        getNews(param);
        strictMode = false;
        document.querySelector('.switchTitle').style.color = "#CDCDCD";
      }
    });

    // 人物標題處理
    personTitle.addEventListener('click', function(event) {
      appPols = document.querySelectorAll('.person');
      if(param.pol.length !== 0) {
        appPols.forEach(r => r.classList.remove("innerHighlight"));
        personTitle.innerHTML = "人物";
        personTitle.style.color = "#FFFFFF"
        param.pol = [];
        polIssue(param);
        if(strictMode === false) {
          getNews(param);
        } else {
          getNewsLess(param);
        }
        filterHL(param);
      }
    });

    // 議題標題處理
    issueTitle.addEventListener('click', function(event) {
      appIssues = document.querySelectorAll('.issue');
      if(param.issue.length !== 0) {
        appIssues.forEach(r => r.classList.remove("innerHighlight"));
        issueTitle.innerHTML = "議題";
        issueTitle.style.color = "#FFFFFF"
        param.issue = [];
        polIssue(param);
        if(strictMode === false) {
          getNews(param);
        } else {
          getNewsLess(param);
        }
        filterHL(param);
      }
    });

    // 新聞旁標籤點選切換
    function tagCall(tagName, cond) {
      param = {
        pol: [],
        issue: [],
        party: []
      }
      if(cond === "pol") {
        param.pol = [tagName]
      } else {
        param.issue = [tagName]
      }
      partyPol(param);
      polIssue(param);
      appSide.scrollTop = 0;
      if(strictMode === false) {
        getNews(param);
      } else {
        getNewsLess(param);
      }
      filterHL(param);

      if(param.pol.length === 0) {
        personTitle.innerHTML = "人物";
        personTitle.style.color = "#FFFFFF"
      } else {
        personTitle.innerHTML = param.pol;
        personTitle.style.color = "#FFD479"
      }

      if(param.issue.length === 0) {
        issueTitle.innerHTML = "議題";
        issueTitle.style.color = "#FFFFFF"
      } else {
        issueTitle.innerHTML = param.issue;
        issueTitle.style.color = "#FFD479"
      }
    }

    //------------ Server ------------

    // DB 取資料
    function getNews(param) {
      $.ajax({
        url: `api/news/getNews`,
        type: "POST",
        data: JSON.stringify(param),
        contentType: "application/json; charset=utf-8",
        success: function(resp) {
          removeData(appendNews);
          changeTitle(param.pol, param.issue);
          if(resp.data) {
            if(resp.data.news.length < 1){ // 無資料
              appNoContent.style.display = "block";
              appendNews.style.display = "none";
            } else {
              appNoContent.style.display = "none";
              appendNews.style.display = "block";
            }
            dataForm(resp.data.news, param);
            tagShow();
            page = 0;
            next_paging = resp.data.next_paging;
          }
        }
      });
    }

    // DB 取資料 - paging
    function getNewsPage(param, page, cond) {
      scrollStatus = false;
      $.ajax({
        url: `api/news/getNews?paging=${page}`,
        type: "POST",
        data: JSON.stringify(param),
        contentType: "application/json; charset=utf-8",
        success: function(resp) {
          if(resp.data) {
            dataForm(resp.data.news, param, cond);
            tagShow();
            next_paging = resp.data.next_paging;
          }
          scrollStatus = true;
        }
      });
    }

    // DB 取資料 - 政黨影響人物
    function partyPol(param) {
      $.ajax({
        url: `api/getparty`,
        type: "POST",
        data: JSON.stringify(param),
        contentType: "application/json; charset=utf-8",
        success: function(resp) {
          // console.log(resp);
          removeData(filPols);
          filPolsForm(resp.data);
        }
      });
    }

    // DB 取資料 - 人物影響議題
    function polIssue(param) {
      $.ajax({
        url: `api/polgetissues`,
        type: "POST",
        data: JSON.stringify(param),
        contentType: "application/json; charset=utf-8",
        success: function(resp) {
          // console.log(resp);
          removeData(filIssues);
          filIssuesForm(resp);
        }
      });
    }

    // DB 取資料 - 標題 mode
    function getNewsLess(param) {
      $.ajax({
        url: "api/news/getNews/strict",
        type: "POST",
        data: JSON.stringify(param),
        contentType: "application/json; charset=utf-8",
        success: function(resp) {
          removeData(appendNews);
          changeTitle(param.pol, param.issue);
          if(resp.data) {
            if(resp.data.news.length < 1) {
              appNoContent.style.display = "block";
              appendNews.style.display = "none";
            } else {
              appNoContent.style.display = "none";
              appendNews.style.display = "block";
            }
            dataForm(resp.data.news, param);
            tagShow();
            page = 0;
            next_paging = resp.data.next_paging;
          }
        }
      });
    }

    // DB 取資料 - 標題 mode - paging
    function getNewsLessPage(param, page, cond) {
      scrollStatus = false;
      $.ajax({
        url: `api/news/getNews/strict?paging=${page}`,
        type: "POST",
        data: JSON.stringify(param),
        contentType: "application/json; charset=utf-8",
        success: function(resp) {
          if(resp.data) {
            dataForm(resp.data.news, param, cond);
            tagShow();
            next_paging = resp.data.next_paging;
          }
          scrollStatus = true;
        }
      });
    }

    //------------ Function ------------

    // 更改原始標題
    function changeTitle(polName, issueName) {
      let titleName = document.getElementById("titleName");
      let titleIssue = document.getElementById("titleIssue");
      if(polName.length === 0 && issueName.length === 0) {
        titleName.innerHTML = "總覽";
        titleIssue.innerHTML = "";
      } else if(polName.length === 2) {
        titleName.innerHTML = polName[0] + " " + polName[1];
        titleIssue.innerHTML = issueName;
      } else if(polName.length === 0) {
        titleName.innerHTML = issueName;
        titleIssue.innerHTML = "";
      } else {
        titleName.innerHTML = polName;
        titleIssue.innerHTML = issueName;
      }
    }

    // Data 組裝
    function dataForm(respData, param, cond) {
      // document.getElementById('oncomingNewsP').style.display = "none";
      // document.getElementById('appendNewsP').style.display = "flex";

      for (let i = 0; i < respData.length; i ++) {
        var li = document.createElement("li");

        // timeline
        var timelineDiv = document.createElement("div");
        timelineDiv.className = "timeline";

        var time = new Date(respData[i].pubTime);

        var yearP = document.createElement("p");
        var monthP = document.createElement("p");
        yearP.className = "year";
        monthP.className = "month";

        if(i > 0) {
          var preTime = new Date(respData[i - 1].pubTime);

          var preTimeY = preTime.getFullYear();
          var preTimeM = preTime.getMonth();
          var curTimeY = time.getFullYear();
          var curTimeM = time.getMonth();

          if(preTimeY !== curTimeY && preTimeM !== curTimeM) {
            yearP.innerHTML = time.getFullYear();
            monthP.innerHTML = (time.getMonth() < 10 ? '0' : '') + (time.getMonth() + 1);
          } else if (preTimeY == curTimeY && preTimeM !== curTimeM) {
            yearP.innerHTML = "";
            monthP.innerHTML = (time.getMonth() < 10 ? '0' : '') + (time.getMonth() + 1);
          } else {
            yearP.innerHTML = "";
            monthP.innerHTML = "";
          }
        } else {
          yearP.innerHTML = time.getFullYear();
          monthP.innerHTML = (time.getMonth() < 10 ? '0' : '') + (time.getMonth() + 1);
        }

        timelineDiv.appendChild(yearP);
        timelineDiv.appendChild(monthP);

        // news
        var newsDiv = document.createElement("div");
        newsDiv.className = "news";
        newsDiv.setAttribute("onclick", `readMore()`);
        // link.setAttribute("href", `${respData[i].href}`);
        // link.setAttribute("target", "_blank");

        var newsContentDiv = document.createElement("div");
        newsContentDiv.className = "news-content";

        var titleDiv = document.createElement("div");
        titleDiv.className = "title";
        titleDiv.innerHTML = respData[i].title;

        var publisherDiv = document.createElement("div");
        publisherDiv.className = "publisher";
        publisherDiv.innerHTML = respData[i].publisher;

        var pubTimeDiv = document.createElement("div");
        pubTimeDiv.className = "pubTime";
        pubTimeDiv.innerHTML = respData[i].pubTime;

        var descDiv = document.createElement("div");
        descDiv.className = "desc";
        var descP = document.createElement("p");
        descP.innerHTML = respData[i].content;

        var contentDiv = document.createElement("div");
        contentDiv.className = "mainContent hidden";
        var contentP = document.createElement("p");
        let modContent = respData[i].content.replace(/(\u3002\u300d)/g, '。」<br><br>').replace(/(\u3002)(?!\u300d)/g, '。<br><br>')
        contentP.innerHTML = modContent;
        // contentP.className = "hidden";

        var urlA = document.createElement("a");
        urlA.className = "url hidden";
        urlA.innerHTML = `新聞來源：${respData[i].href}`;
        urlA.setAttribute("href", `${respData[i].href}`);
        urlA.setAttribute("target", "_blank");

        descDiv.appendChild(descP);
        contentDiv.appendChild(contentP);
        newsContentDiv.appendChild(titleDiv);
        newsContentDiv.appendChild(publisherDiv);
        newsContentDiv.appendChild(pubTimeDiv);
        newsContentDiv.appendChild(descDiv);
        newsContentDiv.appendChild(contentDiv);
        newsContentDiv.appendChild(urlA);

        newsDiv.appendChild(newsContentDiv);

        // tags
        var tagsDiv = document.createElement("div");
        tagsDiv.className = "newsTags";

        var tagUlPol = document.createElement("ul");
        tagUlPol.className = "ulPol";
        var tagUlIsu = document.createElement("ul");
        tagUlIsu.className = "ulIsu";

        let polTagC = 0;
        let isuTagC = 0;
        // for(let j = 0; j < respData[i].tag.length && j < 10; j++) {
        for(let j = 0; j < respData[i].tag.length && polTagC < 8 && isuTagC < 8; j++) {
          var tagLiPol = document.createElement("li");
          var tagLiIsu = document.createElement("li");
          // if(respData[i].tag[j].tagName != name) {
          if(param.pol.indexOf(respData[i].tag[j].tagName) == -1 && param.issue.indexOf(respData[i].tag[j].tagName) == -1) {
            tagLiPol.innerHTML = respData[i].tag[j].tagName;
            tagLiIsu.innerHTML = respData[i].tag[j].tagName;
            if(respData[i].tag[j].tagType === "NRP") {
              tagLiPol.className = "polTag";
              tagLiPol.setAttribute("onclick", `tagCall("${respData[i].tag[j].tagName}", "pol")`);
              tagUlPol.appendChild(tagLiPol);
              polTagC++;
            } else {
              tagLiIsu.className = "issueTag";
              tagLiIsu.setAttribute("onclick", `tagCall("${respData[i].tag[j].tagName}", "issue")`);
              tagUlIsu.appendChild(tagLiIsu);
              isuTagC++;
            }
            // tagUl.appendChild(tagLi);
          }
        }
        tagsDiv.appendChild(tagUlPol);
        tagsDiv.appendChild(tagUlIsu);

        // 組合
        li.appendChild(timelineDiv);
        li.appendChild(newsDiv);
        li.appendChild(tagsDiv);

        if(cond === "oncoming" || cond === "index" || cond === "hots") {
          onSide.appendChild(li);
        } else {
          appendNews.appendChild(li);
          document.getElementById('oncomingNewsP').style.display = "none";
          document.getElementById('appendNewsP').style.display = "flex";
        }
      }
    }

    // Data 組裝 Less
    function dataFormLess(respData, pol) {
      document.getElementById('oncomingNewsP').style.display = "none";
      document.getElementById('appendNewsP').style.display = "flex";

      for (let i = 0; i < respData.length; i ++) {
        var li = document.createElement("li");

        // timeline
        var timelineDiv = document.createElement("div");
        timelineDiv.className = "timeline";

        var time = new Date(respData[i].pubTime);

        var yearP = document.createElement("p");
        var monthP = document.createElement("p");
        yearP.className = "year";
        monthP.className = "month";

        if(i > 0) {
          var preTime = new Date(respData[i - 1].pubTime);

          var preTimeY = preTime.getFullYear();
          var preTimeM = preTime.getMonth();
          var curTimeY = time.getFullYear();
          var curTimeM = time.getMonth();

          if(preTimeY !== curTimeY && preTimeM !== curTimeM) {
            yearP.innerHTML = time.getFullYear();
            monthP.innerHTML = (time.getMonth() < 10 ? '0' : '') + (time.getMonth() + 1);
          } else if (preTimeY == curTimeY && preTimeM !== curTimeM) {
            yearP.innerHTML = "";
            monthP.innerHTML = (time.getMonth() < 10 ? '0' : '') + (time.getMonth() + 1);
          } else {
            yearP.innerHTML = "";
            monthP.innerHTML = "";
          }
        } else {
          yearP.innerHTML = time.getFullYear();
          monthP.innerHTML = (time.getMonth() < 10 ? '0' : '') + (time.getMonth() + 1);
        }

        timelineDiv.appendChild(yearP);
        timelineDiv.appendChild(monthP);

        // news
        var newsDiv = document.createElement("div");
        newsDiv.className = "news";
        newsDiv.setAttribute("onclick", "readMore()");

        var newsContentDiv = document.createElement("div");
        newsContentDiv.className = "news-content";

        var titleDiv = document.createElement("div");
        titleDiv.className = "title";
        titleDiv.innerHTML = respData[i].title;

        var publisherDiv = document.createElement("div");
        publisherDiv.className = "publisher";
        publisherDiv.innerHTML = respData[i].publisher;

        var pubTimeDiv = document.createElement("div");
        pubTimeDiv.className = "pubTime";
        pubTimeDiv.innerHTML = respData[i].pubTime;

        var descDiv = document.createElement("div");
        descDiv.className = "desc";
        var descP = document.createElement("p");
        descP.innerHTML = respData[i].description;

        var contentDiv = document.createElement("div");
        contentDiv.className = "mainContent hidden";
        var contentP = document.createElement("p");
        let modContent = respData[i].content.replace(/(\u3002\u300d)/g, '。」<br><br>').replace(/(\u3002)(?!\u300d)/g, '。<br><br>')
        contentP.innerHTML = modContent;
        // contentP.className = "hidden";

        var urlA = document.createElement("a");
        urlA.className = "url hidden";
        urlA.innerHTML = `新聞來源：${respData[i].href}`;
        urlA.setAttribute("href", `${respData[i].href}`);
        urlA.setAttribute("target", "_blank");

        descDiv.appendChild(descP);
        contentDiv.appendChild(contentP);
        newsContentDiv.appendChild(titleDiv);
        newsContentDiv.appendChild(publisherDiv);
        newsContentDiv.appendChild(pubTimeDiv);
        newsContentDiv.appendChild(descDiv);
        newsContentDiv.appendChild(contentDiv);
        newsContentDiv.appendChild(urlA);

        newsDiv.appendChild(newsContentDiv);

        // 組合
        li.appendChild(timelineDiv);
        li.appendChild(newsDiv);

        appendNews.appendChild(li);
      }
    }

    // filter-pols 組裝
    function filPolsForm(respData) {

      let dataLength = respData.length;
      for(let i = 0; i < dataLength; i++) {
        var filPolLi = document.createElement("li");
        filPolLi.className = "person";
        filPolLi.innerHTML = respData[i].name;

        // 建立 child-pols 監聽
        filPolLi.addEventListener('click', function() {
          // polList = [];
          param.pol = [];
          appPols = document.querySelectorAll('.person');
          if(this.classList.contains("innerHighlight")) {
            this.classList.remove("innerHighlight");
            param.pol = [];
          } else {
            appPols.forEach(r => r.classList.remove("innerHighlight"));
            this.classList.add("innerHighlight");
          }

          appPols.forEach(function(person) {
            if(person.classList.contains("innerHighlight")) {
              param.pol.push(person.innerHTML);
            }
          });

          appSide.scrollTop = 0;
          if(strictMode === false) {
            getNews(param);
          } else {
            getNewsLess(param);
          }
          polIssue(param);
          // pol filter 標題改
          if(param.pol.length === 0) {
            personTitle.innerHTML = "人物";
            personTitle.style.color = "#FFFFFF"
          } else {
            personTitle.innerHTML = param.pol;
            personTitle.style.color = "#FFD479"
          }
        });
        filPols.appendChild(filPolLi);
        filterHL(param);
      }
    }

    // filter-issue 組裝
    function filIssuesForm(respData) {
      // console.log(respData);
      let dataLength = respData.length;

      for(let i = 0; i < dataLength; i++) {
        var polGetIssLi = document.createElement("li");
        polGetIssLi.className = "issue";
        polGetIssLi.innerHTML = respData[i].name;

        // 建立 child 監聽
        polGetIssLi.addEventListener('click', function() {
          param.issue = [];
          appIssues = document.querySelectorAll('.issue');
          if(this.classList.contains("innerHighlight")) {
            this.classList.remove("innerHighlight");
            param.issue = [];
          } else {
            appIssues.forEach(r => r.classList.remove("innerHighlight"));
            this.classList.add("innerHighlight");
          }

          appIssues.forEach(function(issue) {
            if(issue.classList.contains("innerHighlight")) {
              param.issue.push(issue.innerHTML);
            }
          });
          appSide.scrollTop = 0;
          if(strictMode === false) {
            getNews(param);
          } else {
            getNewsLess(param);
          }
          // issue filter 標題改
          if(param.issue.length === 0) {
            issueTitle.innerHTML = "議題";
            issueTitle.style.color = "#FFFFFF"
          } else {
            issueTitle.innerHTML = param.issue;
            issueTitle.style.color = "#FFD479"
          }
        });
        filIssues.appendChild(polGetIssLi);
        filterHL(param);
      }

    }


    // 移除子項目
    function removeData(item) {
      var child = item.lastElementChild;
      while(child) {
        item.removeChild(child);
        child = item.lastElementChild;
      }
    }

    // 點擊 tag 更新 filter HL
    function addHLByTag(item, className) {
      console.log(item);
      var polClasses = document.getElementsByClassName(className),
          results = [];
      for(var i = 0; i < polClasses.length; i++) {
        var content = polClasses[i].innerText;
        if (content.indexOf(item) != -1) {
          results.push(polClasses[i]);
          polClasses[i].classList.add("innerHighlight")
        }
      }
    }

    // filter tag refresh
    function filterHL(param) {
      // let polClasses = document.getElementsByClassName("person");
      // let issueClasses = document.getElementsByClassName("issue");
      let partyClasses = document.getElementsByClassName("party");

      people = document.querySelectorAll('.person');
      issues = document.querySelectorAll('.issue');

      people.forEach(r => r.classList.remove("innerHighlight"));
      issues.forEach(r => r.classList.remove("innerHighlight"));

      for(let i = 0; i < people.length; i++) {
        let polContent = people[i].innerText;
        if (polContent.indexOf(param.pol[0]) != -1) {
          people[i].classList.add("innerHighlight");
        }
      }
      for(let i = 0; i < issues.length; i++) {
        let issueContent = issues[i].innerText;
        if (issueContent.indexOf(param.issue[0]) != -1) {
          issues[i].classList.add("innerHighlight");
        }
      }
    }

    // 標籤顯示處理 -> CSS??
    function tagShow() {

      let tagJudge = document.getElementsByClassName("content")[0].offsetWidth;
      let tagsShow = document.querySelectorAll(".newsTags");
      let renderTagsShow = document.querySelectorAll(".renderTags");

      if(document.querySelectorAll(".newsTags") && tagJudge > 1150) {
        tagsShow.forEach(tagShow => tagShow.style.display = "flex");
      } else if (document.querySelectorAll(".newsTags") && tagJudge < 1151) {
        tagsShow.forEach(tagShow => tagShow.style.display = "none");
      }
      if(document.querySelectorAll(".renderTags") && tagJudge > 1150) {
        renderTagsShow.forEach(tagShow => tagShow.style.display = "flex");
      } else if (document.querySelectorAll(".renderTags") && tagJudge < 1151) {
        renderTagsShow.forEach(tagShow => tagShow.style.display = "none");
      }
    }

    // 展開
    function readMore() {
      let parentTarget = event.currentTarget.childNodes[0];
      if(parentTarget.classList.contains("openFlag")) {
        parentTarget.classList.remove("openFlag");
        parentTarget.childNodes[3].classList.remove("hidden");
        parentTarget.childNodes[4].classList.add("hidden");
        parentTarget.childNodes[5].classList.add("hidden");
      } else {
        parentTarget.classList.add("openFlag");
        parentTarget.childNodes[3].classList.add("hidden");
        parentTarget.childNodes[4].classList.remove("hidden");
        parentTarget.childNodes[5].classList.remove("hidden");
      }
      // 取得當下點開的是第幾子元素
      var child = event.currentTarget.parentNode
      var h = 0; // 第幾個子元素
      var k = 0; // 前面有幾個展開
      let height = 0;
      while((child = child.previousSibling) != null) {
        h++;
      }
      for(let i = 1; i < h; i++) {
        if(event.currentTarget.parentNode.parentNode.childNodes[i].childNodes[1].childNodes[0].classList.contains("openFlag")) { // 有展開的項目
          height += event.currentTarget.parentNode.parentNode.childNodes[i].childNodes[1].offsetHeight + 20 // 20(margin)
        } else { // 無展開的項目
          k++;
        }
      }
      // for appendNews & oncomingNews
      appSide.scrollTop = height + (k * 185) + 16; // 16(頂端 padding)
      onSide.scrollTop = height + (k * 185) + 16; // 16(頂端 padding)
    }

    // paging
    let page = 0;
    let next_paging = 0;
    let scrollStatus = true;

    let onSide = document.querySelector("#oncomingNews");
    let appSide = document.querySelector("#appendNews");
    function paging(cond) {
      if(scrollStatus === false) { // waiting for next page
        return;
      }
      let x = appSide.scrollHeight - appSide.scrollTop;
      if(cond === "index" || cond === "hots") {
        param.pol = getQueryStringValue("pol") ? [getQueryStringValue("pol")] : [];
        param.issue = getQueryStringValue("issue") ? [getQueryStringValue("issue")] : [];
      }
      if(cond === "oncoming" || cond === "index" || cond === "hots") {
        x = onSide.scrollHeight - onSide.scrollTop;
      }
      if(x < 1100 && next_paging !== undefined) {
        page++;
        if(strictMode === false) {
          getNewsPage(param, page, cond);
        } else {
          getNewsLessPage(param, page, cond);
        }
      }
    }

    // get query string
    function getQueryStringValue(key) {
      return decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent(key).replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
    }

  </script>

  </body>


</html>
